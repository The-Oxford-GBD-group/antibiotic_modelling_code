% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_pv_table.R
\name{get_pv_table}
\alias{get_pv_table}
\title{Get predictive validity table}
\usage{
get_pv_table(d, indicator, indicator_group, rd, aggregate_on,
  draws = 1000, coverage_probs = c(95), result_agg_over = c("year",
  "oos"), weighted = TRUE, family = "binomial", plot = TRUE,
  plot_by = NULL, plot_by_title = NULL, plot_ci = FALSE,
  plot_ci_level = 95, ci_color = "grey", point_alpha = 1,
  point_color = "black", plot_title = indicator, plot_ncol = 4,
  save_csv = T, out.dir)
}
\arguments{
\item{d}{data.table containing data and IS/OOS draws from `run_is_oos()`}

\item{indicator}{indicator}

\item{indicator_group}{indicator_group}

\item{rd}{run date}

\item{aggregate_on}{column of spatial aggregation ("country", "ad1", or "ad2" usually) - can pass vector}

\item{draws}{number of draws (numeric)}

\item{coverage_probs}{probability at which you want to assess coverage of predictive intervals
can be a single number or a vector; if a vector can produce calibration plots
assessing x\% coverage at various cutoffs}

\item{result_agg_over}{what should the final table aggregate over (vector)? For instance
c("year", "oos") are the defaults.  If you include "region" here
the function will produce a separate set of validation plots,
one for each region}

\item{weighted}{do you want to weight PV metrics on sample size? (Boolean)}

\item{family}{distribution to use ("binomial" or "gaussian")}

\item{plot}{produce plots? (Boolean)}

\item{plot_by}{produce separate plots for an element of `result_agg_over`?
for instance, `plot_by = region` with `result_agg_over = c("year", "oos", "region"`
will produce a separate plot for each region/oos combo}

\item{plot_by_title}{title for captions for "plot_by" object, i.e. "Region" (defaults to plot_by)}

\item{plot_ci}{plot CIs (Boolean)}

\item{plot_ci_level}{what ci level to plot (numeric, i.e. "95" is the 95\% UI)}

\item{ci_color}{what color do you want the CI lines to be?}

\item{point_alpha}{how transparent do you want the points themselves to be (numeric, [0-1])}

\item{point_color}{what color do you want the points to be in your validation plots?}

\item{plot_title}{main title for your plots (defaults to "indicator")}

\item{plot_ncol}{how many columns do you want your plots to have?}

\item{save_csv}{save a csv table of your predictive validity metrics?}

\item{out.dir}{where do you want these results to be saved?}
}
\value{
data.table of PV metrics; plots and tables of PV metrics depending on the combinations of options above
}
\description{
Generate plots and tables of metrics of predictive validity
}
\examples{

\dontrun{
#' # A PV table by modeling regions with plots (one for each modeling region) and semi-transparent points
# Also includes calibration plots since there are multiple coverage levels

# Get in and out of sample draws
run_in_oos <- get_is_oos_draws(
  ind_gp = indicator_group,
  ind = indicator,
  rd = run_date,
  ind_fm = "binomial",
  model_domain = Regions,
  age = 0,
  nperiod = length(year_list),
  yrs = year_list,
  get.oos = as.logical(makeholdouts),
  write.to.file = TRUE,
  year_col = "year"
)

# Load the IS/OOS draws created above
draws.df <- fread(sprintf(
  "/share/geospatial/mbg/\%s/\%s/output/\%s/output_draws_data.csv",
  indicator_group, indicator, run_date
))

# run the PV table function
pvtable.reg <- get_pv_table(
  d = draws.df,
  indicator_group = indicator_group,
  rd = run_date,
  indicator = indicator,
  result_agg_over = c("year", "oos", "region"),
  coverage_probs = seq(from = 5, to = 95, by = 5),
  aggregate_on = "ad2",
  draws = as.numeric(samples),
  out.dir = out_dir,
  plot = TRUE,
  plot_by = "region",
  plot_by_title = "Region",
  plot_ci = TRUE,
  point_alpha = 0.1,
  point_color = "black",
  ci_color = "gray",
  plot_title = plot_title
)
}

}
