% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_R_packages.R
\name{load_R_packages}
\alias{load_R_packages}
\title{A function to load a list of R packages}
\usage{
load_R_packages(package_list)
}
\arguments{
\item{package_list}{Character vector defining one or more package names.}
}
\value{
None
}
\description{
\code{load_R_packages} loads a list of R packages depending on where the
script is being run.
}
\details{
WARNING: The logic for this function is dependent on the SINGULARITY_NAME
         environmental being written into the Renviron in the Singularity
         image so that it can be detected from within RStudio. This should
         match the name of the image and will therefore be an exact match for
         the SINGULARITY_NAME environmental variable created by Singularity
         for consistency. Unfortunately, this variable is not accessible from
         RStudio, which is why we go to the trouble of hard coding it into
         the Renviron.

WARNING: In addition to the SINGULARITY_NAME this function also assumes that
         all packages built into LBD Singularity images live at:
         /usr/local/R-<version>/library

This function is an attempt to address the tangle that is loading packages
from different locations. This was much worse in the past when we were
loading packages for different versions of R installed on different cluster
nodes running different OS's as well as RStudio and R both under Singularity
images. After the team moved to R and RStudio only running within Singularity
containers, the process of determining where to load packages from became
much simpler.

The following Scenario's are currently supported by this function:

Scenario | How is R Run?            | Load Packages From Directory
---------|------------------------------------------------------------------
    A    | R in LBD image           | /usr/local/R-<version>/library
    B    | RStudio in LBD image     | /usr/local/R-<version>/library
    C    | RStudio in non-LBD image | /share/geospatial/non_lbd_rstudio_pkgs/<version>

Note that R packages meant for use in RStudio not supported by the LBD team
were originally stored at '/home/j/temp/geospatial/singularity_packages'
but in October of 2018, were moved to
'/share/geospatial/non_lbd_rstudio_pkgs' after an update was made to the
cluster where /home/j was not necessarily accessible from all nodes.
This function tries to identify each of these scenarios and then load
packages from the correct place. Scenario A and B are when running R from
within a Singularity container spun up from an image that *has been* built
by the LBD team. We want to check for this specifically so we know 1) that
the required packages are also built into the image and we know where they
are located and 2) that special packages (like TMB) are there.

Scenario C would be for those users that continue to use RStudio from
images that LBD does not construct or support
(/share/singularity-images/rstudio) and only has a limited number of packages
built in to the image, which is why we rely on the directory of R packages
outside of the image.

Once this function determines where it is being run, it will attempt to load
the list of packages from the appropriate directory also setting
'.libPaths()' as necessary.

Packages are loaded with calls to 'base::library()' so we get errors if
packages cannot be loaded.
}
\note{
Deprecated since the library will load all dependent packages
}
\seealso{
This function is used by:
\code{\link{mbg_setup}}

Other MBG setup functions: \code{\link{is_integer}},
  \code{\link{is_lbd_core_repo}},
  \code{\link{is_lbd_singularity}},
  \code{\link{is_rstudio}}, \code{\link{is_singularity}},
  \code{\link{load_mbg_functions}},
  \code{\link{load_setthreads}}, \code{\link{mbg_setup}},
  \code{\link{set_original_threads}},
  \code{\link{set_serial_threads}},
  \code{\link{source_functions}}
}
\author{
Ian M. Davis, \email{imdavis@uw.edu}
}
\concept{MBG setup functions}
