% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_aroc.R
\name{make_aroc}
\alias{make_aroc}
\title{Make AROC}
\usage{
make_aroc(ind_gp, ind, rd, matrix_pred_name = NULL, type,
  measure = "mortality", skip_cols = NULL, year_list = c(2000:2015),
  uselogit = FALSE, raked, weighting_res = "domain",
  weighting_type = "exponential", pow = 1, input_data = NULL,
  mult_emp_exp = FALSE, extra_file_tag = "",
  shapefile_version = "current")
}
\arguments{
\item{ind_gp}{indicator group}

\item{ind}{indicator}

\item{rd}{run_date}

\item{matrix_pred_name}{In \code{sprintf} notation. The one object passed into
the string should will be a region name. this allows different regions to be
passed to different named matrix_preds (pixel level, ad0, ad1, ad2, ...)
e.g. 'had_diarrhea_cell_draws_eb_bin0_\%s_diarrhea2_0.RData' which
will be passed to sprintf('had_diarrhea_cell_draws_eb_bin0_\%s_0.RData', reg)}

\item{type}{Type of aroc to create. Options include \code{cell}, \code{admin},
or \code{c('cell', 'admin')} for both.}

\item{measure}{prevalence, incidence, mortality, etc}

\item{skip_cols}{columns to skip when reading in the cell preds
For example, if the first two columns store non-pred information in your
file format, \code{skip_cols = 2} will read in all columns from 3 onwards}

\item{year_list}{Vector (integer) of years included in the model run / cell pred object}

\item{uselogit}{Should this be done in logit space?}

\item{raked}{Should we do this with raked cell/admin preds?}

\item{weighting_res}{Spatial resolution to apply weights. Can be done by either:
'domain' (e.g. Africa),
'country'.
In the future this could be expanded to adm* levels. Currently this only affects
weighting if you also select weighting_type==empirical}

\item{weighting_type}{Method to generate the weighting used in the weighted-mean of the
rate of changes calculated between all adjacent pairs of years in year_list.
Can be: 'exponential' (see pow argument for details) or 'empirical'.
Empirical generates weights proportional to the amount of data in each year.
  - The total sample size across all years divided by num_years is added to every year
    to ensure no pairs of years get zero weight
  - If empirical and country are both selected and there are countries with no data then
    exponential weights are used
  - Must supply input_data}

\item{pow}{Power used in year-weighting scheme:
exponential weight used in determining year_wt_i:
     (yr_i - yr_1)/(yr_n - yr_i))^pow
if pow==0, get uniform wts
if pow==1, get linear wts
if pow > 1, get exponential wts, etc.}

\item{input_data}{Required to derive emprical weights. A set of cleaned and collapsed micro
data (e.g. input to MBG models) that will be used to derive the emprical weights.
Required Columns:
   - country (iso3)
   - N
   - year}

\item{mult_emp_exp}{if TRUE and you are calculating emprical weights, the sample-size
driven empirical weights are also multipled by the exponential weighting scheme such
that both the exponential weight and the empirical weight contribute to the final weights}

\item{extra_file_tag}{Appended at the end of all files generated from this run of the function.
Useful if you're comparing different weights/resolutions to calcualte AROC and project}

\item{shapefile_version}{string specifying which version of shapefiles to pull}
}
\value{
writes cell- and admin- level aroc objects to standard directories and formats
  in the 'pred_derivatives' folder of the model run.  cell-level objects are in the
  cell_pred indexed format. Both cell- and admin- aroc objects are matrices wide by draw.
NOTE: admin_preds are sorted such that the order of the rows is by year and then admin_code
}
\description{
Generates a set of aroc objects from cell_preds or admin_preds, for use in
projections or in other analyses that require AROC
}
\examples{
\dontrun{
make_aroc(
  ind_gp = indicator_group,
  ind = indicator,
  rd = run_date,
  matrix_pred_name = NULL,
  type = c("cell", "admin"),
  measure = "prevalence",
  year_list = c(2000:2015),
  uselogit = TRUE,
  raked = TRUE,
  weighting_res = "country",
  weighting_type = "empirical",
  pow = 1,
  input_data = clean_collapsed_micro_data,
  mult_emp_exp = TRUE
)
}

}
