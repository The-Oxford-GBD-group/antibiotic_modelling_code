% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set_default_config_values.R
\name{set_default_config_values}
\alias{set_default_config_values}
\title{Set unsupplied configuration values with defaults}
\usage{
set_default_config_values(config, default_config)
}
\arguments{
\item{config}{a \code{data.table} with the existing configuration. This MUST have two columns named V1 and V2. V1 should contain configuration variable names e.g., "pop_measure", "long_col". The V2 should contain configuration values e.g., "a0004t", "long".}

\item{default_config}{a \code{data.table} with default configuration values. This MUST have two rows. The first row must be configuration variable names e.g., "pop_measure", "long_col". The second row should contain default values which must either be regular string values (which will be converted to appropriate types later) OR function calls in the form of \code{function_returning_default_value(config)}}
}
\value{
updated \code{config} table.
}
\description{
Checks the existing \code{config} object and compares it to \code{default_config}. Any values not set in \code{config} are set with the default values.

Default values may be string values OR functions. Functions must be written in the form "func_name(config)" (no quotes necessary). This allows for dynamically set default values e.g., a way to always refer to the newest worldpop covariate release.

All non-function default values will be processed first, and then function default values will be processed. Each function MUST take exactly 1 parameter: \code{config} (the current configuration data.table object). This allows for default values which require contextual information e.g., the latest worldpop a0004t release may differ from the latest worldpop a0509f release.

\strong{IMPORTANT}: the configuration values provided have not yet been converted to appropriate R types so they \strong{will all be characters}.
}
